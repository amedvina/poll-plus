//source: https://github.com/multiparty/jiff
!function(exports,node){var saved_instance;exports.connect=function(hostname,computation_id,options){var opt=Object.assign({},options);return opt.Zp=13,opt.crypto_provider=!0,opt.sodium=!1,node&&(JIFFClient=require("../../lib/jiff-client"),$=require("jquery-deferred")),saved_instance=new JIFFClient(hostname,computation_id,opt)};var count={};exports.compute=function(inputs,jiff_instance){null==jiff_instance&&(jiff_instance=saved_instance),null==count[jiff_instance.id]&&(count[jiff_instance.id]=1);var this_count=count[jiff_instance.id];count[jiff_instance.id]++;var deferred=$.Deferred();return jiff_instance.share_array(inputs).then((function(option_shares){jiff_instance.seed_ids(this_count);var results=option_shares[1].slice(),i,j;for(j=2;j<=jiff_instance.party_count;j++)for(i=0;i<option_shares[j].length;i++)results[i]=results[i].sadd(option_shares[j][i]);var check=option_shares[1][0].clteq(1);for(j=1;j<=jiff_instance.party_count;j++)for(i=0;i<option_shares[j].length;i++)check=check.smult(option_shares[j][i].clteq(1));for(j=1;j<=jiff_instance.party_count;j++){var sum=option_shares[j][0];for(i=1;i<option_shares[j].length;i++)sum=sum.sadd(option_shares[j][i]);check=check.smult(sum.clteq(1))}for(i=0;i<results.length;i++)results[i]=results[i].smult(check);jiff_instance.open_array(results).then((function(results){deferred.resolve(results)}))})),deferred.promise()}}("undefined"==typeof exports?this.mpc={}:exports,"undefined"!=typeof exports);